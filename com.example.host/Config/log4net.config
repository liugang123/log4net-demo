<?xml version="1.0" encoding="utf-8" ?>
<configuration>
	<configurations>
		<section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net"/>
	</configurations>
	<log4net>
		<!--错误日志配置-->
		<appender name="ErrorAppender" type="log4net.Appender.RollingFileAppender">
			<!--1.1 文件夹的位置（也可以写相对路径）-->
			<file type="log4net.Util.PatternString" value="D:\LogFiles\Log4netDemo\"/>
			<!--1.2 是否追加到文件-->
			<appendToFile value="true"/>
			<!--1.3 使用最小锁定模型（minimal locking model），以允许多个进程可以写入同一个文件 -->
			<lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
			<!--1.4 配置Unicode编码-->
			<Encoding value="UTF-8" />
			<!--1.5 是否只写到一个文件里-->
			<param name="StaticLogFileName" value="false" />
			<!--1.6 配置按照何种方式产生多个日志文件 （Date：日期、Size：文件大小、Composite：日期和文件大小的混合方式）-->
			<rollingStyle value="Composite"/>
			<!--1.7 介绍多种日志的的命名和存放在磁盘的形式-->
			<!--1.7.1 在根目录下直接以日期命名txt文件 注意"的位置,去空格 -->
			<param name="DatePattern" value="yyyy-MM-dd&quot;_error.log&quot;" />
			<!--1.8 配置每个日志的大小。【只在1.6 RollingStyle 选择混合方式与文件大小方式下才起作用！！！】可用的单位:KB|MB|GB。不要使用小数,否则会一直写入当前日志，
超出大小后在所有文件名后自动增加正整数重新命名，数字最大的最早写入。-->
			<maximumFileSize value="10MB"/>
			<!--1.9 最多产生的日志文件个数，超过则保留最新的n个 将value的值设置-1，则不限文件个数 【只在1.6 RollingStyle 选择混合方式与文件大小方式下才起作用！！！】
与1.8中maximumFileSize文件大小是配合使用的-->
			<maxSizeRollBackups value="150"/>
			<!--1.10 配置文件文件的布局格式，使用PatternLayout，自定义布局-->
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %t %c (%file:%line\)- %m%n"/>
			</layout>
		</appender>

		<!--info日志配置-->
		<appender name="InfoAppender" type="log4net.Appender.RollingFileAppender">
			<!--1.1 文件夹的位置（也可以写相对路径）-->
			<file type="log4net.Util.PatternString" value="D:\LogFiles\Log4netDemo\"/>
			<!--1.2 是否追加到文件-->
			<appendToFile value="true"/>
			<!--1.3 使用最小锁定模型（minimal locking model），以允许多个进程可以写入同一个文件 -->
			<lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
			<!--1.4 配置Unicode编码-->
			<Encoding value="UTF-8" />
			<!--1.5 是否只写到一个文件里-->
			<param name="StaticLogFileName" value="false" />
			<!--1.6 配置按照何种方式产生多个日志文件 （Date：日期、Size：文件大小、Composite：日期和文件大小的混合方式）-->
			<rollingStyle value="Composite"/>
			<!--1.7 介绍多种日志的的命名和存放在磁盘的形式-->
			<!--1.7.1 在根目录下直接以日期命名txt文件 注意"的位置,去空格 -->
			<param name="DatePattern" value="yyyy-MM-dd&quot;_info.log&quot;" />
			<!--1.8 配置每个日志的大小。【只在1.6 RollingStyle 选择混合方式与文件大小方式下才起作用！！！】可用的单位:KB|MB|GB。不要使用小数,否则会一直写入当前日志，
超出大小后在所有文件名后自动增加正整数重新命名，数字最大的最早写入。-->
			<maximumFileSize value="10MB"/>
			<!--1.9 最多产生的日志文件个数，超过则保留最新的n个 将value的值设置-1，则不限文件个数 【只在1.6 RollingStyle 选择混合方式与文件大小方式下才起作用！！！】
与1.8中maximumFileSize文件大小是配合使用的-->
			<maxSizeRollBackups value="150"/>
			<!--1.10 配置文件文件的布局格式，使用PatternLayout，自定义布局-->
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %t %c (%file:%line\)- %m%n"/>
			</layout>
		</appender>

		<!--Debug日志配置-->
		<appender name="DebugAppender" type="log4net.Appender.RollingFileAppender">
			<!--1.1 文件夹的位置（也可以写相对路径）-->
			<file type="log4net.Util.PatternString" value="D:\LogFiles\Log4netDemo\"/>
			<!--1.2 是否追加到文件-->
			<appendToFile value="true"/>
			<!--1.3 使用最小锁定模型（minimal locking model），以允许多个进程可以写入同一个文件 -->
			<lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
			<!--1.4 配置Unicode编码-->
			<Encoding value="UTF-8" />
			<!--1.5 是否只写到一个文件里-->
			<param name="StaticLogFileName" value="false" />
			<!--1.6 配置按照何种方式产生多个日志文件 （Date：日期、Size：文件大小、Composite：日期和文件大小的混合方式）-->
			<rollingStyle value="Composite"/>
			<!--1.7 介绍多种日志的的命名和存放在磁盘的形式-->
			<!--1.7.1 在根目录下直接以日期命名txt文件 注意"的位置,去空格 -->
			<param name="DatePattern" value="yyyy-MM-dd&quot;_debug.log&quot;" />
			<!--1.8 配置每个日志的大小。【只在1.6 RollingStyle 选择混合方式与文件大小方式下才起作用！！！】可用的单位:KB|MB|GB。不要使用小数,否则会一直写入当前日志，
超出大小后在所有文件名后自动增加正整数重新命名，数字最大的最早写入。-->
			<maximumFileSize value="10MB"/>
			<!--1.9 最多产生的日志文件个数，超过则保留最新的n个 将value的值设置-1，则不限文件个数 【只在1.6 RollingStyle 选择混合方式与文件大小方式下才起作用！！！】
与1.8中maximumFileSize文件大小是配合使用的-->
			<maxSizeRollBackups value="150"/>
			<!--1.10 配置文件文件的布局格式，使用PatternLayout，自定义布局-->
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %t %c (%file:%line\)- %m%n"/>
			</layout>
		</appender>

		<!--Warn日志配置-->
		<appender name="WarnAppender" type="log4net.Appender.RollingFileAppender">
			<!--1.1 文件夹的位置（也可以写相对路径）-->
			<file type="log4net.Util.PatternString" value="D:\LogFiles\Log4netDemo\"/>
			<!--1.2 是否追加到文件-->
			<appendToFile value="true"/>
			<!--1.3 使用最小锁定模型（minimal locking model），以允许多个进程可以写入同一个文件 -->
			<lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
			<!--1.4 配置Unicode编码-->
			<Encoding value="UTF-8" />
			<!--1.5 是否只写到一个文件里-->
			<param name="StaticLogFileName" value="false" />
			<!--1.6 配置按照何种方式产生多个日志文件 （Date：日期、Size：文件大小、Composite：日期和文件大小的混合方式）-->
			<rollingStyle value="Composite"/>
			<!--1.7 介绍多种日志的的命名和存放在磁盘的形式-->
			<!--1.7.1 在根目录下直接以日期命名txt文件 注意"的位置,去空格 -->
			<param name="DatePattern" value="yyyy-MM-dd&quot;_warn.log&quot;" />
			<!--1.8 配置每个日志的大小。【只在1.6 RollingStyle 选择混合方式与文件大小方式下才起作用！！！】可用的单位:KB|MB|GB。不要使用小数,否则会一直写入当前日志，
超出大小后在所有文件名后自动增加正整数重新命名，数字最大的最早写入。-->
			<maximumFileSize value="10MB"/>
			<!--1.9 最多产生的日志文件个数，超过则保留最新的n个 将value的值设置-1，则不限文件个数 【只在1.6 RollingStyle 选择混合方式与文件大小方式下才起作用！！！】
与1.8中maximumFileSize文件大小是配合使用的-->
			<maxSizeRollBackups value="150"/>
			<!--1.10 配置文件文件的布局格式，使用PatternLayout，自定义布局-->
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %t %c (%file:%line\)- %m%n"/>
			</layout>
		</appender>

		<!--log4net.LogManager.GetLogger("logerror")用这个来选择这种类型-->
		<logger name="logError" additivity="false">
			<level value="ERROR" />
			<appender-ref ref="ErrorAppender" />
		</logger>
		<logger name="logInfo" additivity="false">
			<level value="INFO" />
			<appender-ref ref="InfoAppender" />
		</logger>
		<logger name="logDebug" additivity="false">
			<level value="DEBUG" />
			<appender-ref ref="DebugAppender" />
		</logger>
		<logger name="logWarn" additivity="false">
			<level value="Warn" />
			<appender-ref ref="WarnAppender" />
		</logger>

		<!-- 配置日志的的输出级别 -->
		<root>
			<level value="ALL" />
		</root>
	</log4net>
</configuration>